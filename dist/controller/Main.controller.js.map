{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","onAfterRendering","_onAfterRendering","disableComboBox","onInit","_onInit","BaseController.prototype.onInit.call","oRouter","UIComponent","getRouterFor","getRoute","attachMatched","_initialFunc","initTableSelections","deliveryModel","getDelivModel","setProperty","delComponent","i18n","loadCollectList","_loadCollectList","fetch","then","res","json","data","statsArray","typesArray","groupBy","groupByStatus","groupByType","_groupBy","statuses","typees","map","req","status","statusDesc","type","count","Object","keys","el","unshift","length","checked","_checked","oEvent","li","getParameter","itemPath","getBindingContext","getPath","items","getProperty","atLeastOne","filter","item","selected","_filter","list","getView","byId","oBinding","getBinding","filters","statusFilter","searchFilter","push","getSerachFilter","typeFilters","getTypeFilter","Filter","FilterOperator","Contains","_getSerachFilter","searchValue","searchFilters","and","_getTypeFilter","options","navToCollect","_navToCollect","collectReq","getSource","getObject","currCollect","navTo","navToMultiCollect","_navToMultiCollect"],"sources":["../../src/controller/Main.controller.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport BaseController from \"./BaseController\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Event from \"sap/ui/base/Event\";\nimport MultiComboBox from \"sap/m/MultiComboBox\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport List from \"sap/m/List\";\nimport ListBinding from \"sap/ui/model/ListBinding\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport { ICollectItem } from \"./MultiCollect.controller\";\n\nexport type IType = \"argunt\" | 'timing' | 'delivery'\nexport type IAccessType = \"forklift\" | 'normal' | 'melaket' | 'ladder'\nexport type ICollectRequest = {\n\tstatus: string\n\tstatusDesc: string,\n\trequestId: string\n\ttype: IType,\n\tarmorId: string\n\tdate: string\n\ttime: string\n\tamount: string\n\taskName: string\n\tfactory: string\n\taccessType: IAccessType\n\tsite: string\n\tsection: string\n\treqNumber?: number\n\tselected?: boolean\n\titems?: ICollectItem[]\n\tacceptCollect?: boolean\n\n}\ntype IStatusFilter = {\n\tstatus: string\n\tstatusDesc: string,\n\tcount: number\n}\ntype ITypeFilter = {\n\ttype: string\n\tcount: number\n\tselected?: boolean\n}\ntype IFilters = {\n\tsearchFilter: string,\n\tstatusFilter: string,\n\tgroupByType: ITypeFilter[]\n}\n\n/**\n * @namespace icl.delivery.controller\n */\nexport default class Main extends BaseController {\n\n\tonAfterRendering() {\n\t\tthis.disableComboBox('noWriteCombo')\n\t}\n\tonInit() {\n\t\tsuper.onInit();\n\t\tconst oRouter = UIComponent.getRouterFor(this);\n\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\toRouter.getRoute(\"main\").attachMatched(this._initialFunc, this);\n\t}\n\tprivate _initialFunc() {\n\n\t\tthis.initTableSelections('collectList')\n\t\tconst deliveryModel = this.getDelivModel();\n\t\tdeliveryModel.setProperty('/oMaintain/title', delComponent.i18n('main_title'));\n\t\tdeliveryModel.setProperty('/oFlags/headerNavBack', false);\n\t\tdeliveryModel.setProperty('/currView', 'main');\n\t\tdeliveryModel.setProperty('/currView', 'main');\n\n\t\tthis.loadCollectList(deliveryModel)\n\t}\n\tpublic loadCollectList(deliveryModel: JSONModel) {\n\t\tvoid fetch(\"/mockData/CollectList.JSON\")\n\t\t\t.then(res => res.json())\n\t\t\t.then((data: ICollectRequest[]) => {\n\t\t\t\tconst { statsArray, typesArray } = this.groupBy(data)\n\t\t\t\tdeliveryModel.setProperty('/oMaintain/collectionList', { groupByStatus: statsArray, groupByType: typesArray })\n\t\t\t\tdeliveryModel.setProperty('/oData/collectList', data);\n\t\t\t});\n\t}\n\t// create the status and type filters from the list\n\tpublic groupBy(data: ICollectRequest[]) {\n\t\tconst statuses: { [key: string]: IStatusFilter } = {}\n\t\tconst typees: { [key: string]: ITypeFilter } = {}\n\t\tdata.map(req => {\n\t\t\tconst { status, statusDesc, type } = req\n\t\t\t//group statuses\n\t\t\tif (!statuses[status])\n\t\t\t\tstatuses[status] = { status, statusDesc, count: 1 }\n\t\t\telse\n\t\t\t\tstatuses[status].count += 1;\n\t\t\t//group types\n\t\t\tif (!typees[type])\n\t\t\t\ttypees[type] = { type, count: 1 }\n\t\t\telse\n\t\t\t\ttypees[type].count += 1;\n\n\t\t})\n\t\tconst statsArray = Object.keys(statuses).map(el => statuses[el])\n\t\tconst typesArray = Object.keys(typees).map(el => typees[el])\n\t\tstatsArray.unshift({ 'count': data.length, status: '99', statusDesc: delComponent.i18n('all') });\n\t\treturn { statsArray, typesArray };\n\t}\n\tpublic checked(oEvent: Event) {\n\t\tconst deliveryModel = this.getDelivModel();\n\t\tconst li = oEvent.getParameter('listItem') as ListItem;\n\t\tconst checked = oEvent.getParameter('selected') as boolean;\n\t\tconst itemPath = li.getBindingContext('DelModel').getPath();\n\t\tdeliveryModel.setProperty(`${itemPath}/selected`, checked)\n\n\t\t// check how many selected\n\t\tconst items = deliveryModel.getProperty('/oData/collectList') as ICollectRequest[];\n\t\tconst atLeastOne = items.filter(item => item.selected);\n\t\tdeliveryModel.setProperty('/oMaintain/collectionList/showListFooter', atLeastOne.length)\n\t}\n\tpublic filter() {\n\t\tconst deliveryModel = this.getDelivModel(),\n\t\t\tlist = this.getView().byId('collectList') as List,\n\t\t\toBinding = list.getBinding(\"items\") as ListBinding,\n\t\t\tfilters: Filter[] = [];\n\n\t\tconst { statusFilter, searchFilter, groupByType } = deliveryModel.getProperty('/oMaintain/collectionList') as IFilters\n\n\t\t// search filters\n\t\tsearchFilter && filters.push(this.getSerachFilter(searchFilter))\n\t\t// type filters\n\t\tconst typeFilters = this.getTypeFilter(groupByType)\n\t\ttypeFilters && filters.push(typeFilters)\n\t\t// status filter\n\t\t// not 'all' choic then filter\n\t\tif (statusFilter && statusFilter !== '99') {\n\t\t\tfilters.push(new Filter(\"status\", FilterOperator.Contains, statusFilter))\n\n\t\t}\n\t\toBinding.filter(filters)\n\n\t}\n\tprivate getSerachFilter(searchValue: string) {\n\t\tconst searchFilters = new Filter(\n\t\t\t{\n\t\t\t\tfilters: [\n\t\t\t\t\tnew Filter(\"requestId\", FilterOperator.Contains, searchValue),\n\t\t\t\t\tnew Filter(\"armorId\", FilterOperator.Contains, searchValue),\n\t\t\t\t\tnew Filter(\"askName\", FilterOperator.Contains, searchValue),\n\t\t\t\t],\n\t\t\t\tand: false\n\t\t\t});\n\t\treturn searchFilters;\n\n\t}\n\tprivate getTypeFilter(options: ITypeFilter[]) {\n\t\tconst typeFilters: Filter[] = []\n\t\toptions.map(type => {\n\t\t\tif (type.selected) {\n\t\t\t\ttypeFilters.push(new Filter(\"type\", FilterOperator.Contains, type.type))\n\t\t\t}\n\t\t})\n\t\tif (typeFilters.length) {\n\t\t\treturn new Filter({ filters: typeFilters, and: false });\n\t\t}\n\t\treturn null;\n\n\n\t}\n\tnavToCollect(oEvent: Event) {\n\t\tconst deliveryModel = this.getDelivModel();\n\t\tconst collectReq = (oEvent.getSource() as ListItem).getBindingContext('DelModel').getObject() as ICollectRequest;\n\t\t// init collect page model\n\t\tdeliveryModel.setProperty('/oMaintain/collect', { currCollect: collectReq });\n\n\t\tthis.navTo('collect')\n\t}\n\tnavToMultiCollect(oEvent: Event) {\n\t\tconst deliveryModel = this.getDelivModel();\n\t\tdeliveryModel.setProperty('/oMaintain/multiCollect', {});\n\t\tthis.navTo('multiCollect')\n\t}\n\n}\n"],"mappings":"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"}